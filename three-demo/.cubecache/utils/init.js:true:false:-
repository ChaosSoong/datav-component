{"queryPath":"/utils/init.js","absPath":"/Users/william/Desktop/czb/datav-component/three-demo/utils/init.js","realPath":"/utils/init.js","type":"script","source":"const THREE = require(\"three\")\nrequire(\"./GeometryUtils\")\nTHREE.Cache.enabled = true;\n\t\t\tvar container, stats, permalink, hex;\n\t\t\tvar camera, cameraTarget, scene, renderer;\n\t\t\tvar group, textMesh1, textMesh2, textGeo, materials;\n\t\t\tvar firstLetter = true;\n\t\t\tvar text = \"车主帮\",\n\t\t\t\theight = 20,\n\t\t\t\tsize = 70,\n\t\t\t\thover = 30,\n\t\t\t\tcurveSegments = 4,\n\t\t\t\tbevelThickness = 2,\n\t\t\t\tbevelSize = 1.5,\n\t\t\t\tbevelEnabled = true,\n\t\t\t\tfont = undefined,\n\t\t\t\tfontName = \"optimer\", // helvetiker, optimer, gentilis, droid sans, droid serif\n\t\t\t\tfontWeight = \"bold\"; // normal bold\n\t\t\tvar mirror = true;\n\t\t\tvar fontMap = {\n\t\t\t\t\"helvetiker\": 0,\n\t\t\t\t\"optimer\": 1,\n\t\t\t\t\"gentilis\": 2,\n\t\t\t\t\"droid/droid_sans\": 3,\n\t\t\t\t\"droid/droid_serif\": 4\n\t\t\t};\n\t\t\tvar weightMap = {\n\t\t\t\t\"regular\": 0,\n\t\t\t\t\"bold\": 1\n\t\t\t};\n\t\t\tvar reverseFontMap = [];\n\t\t\tvar reverseWeightMap = [];\n\t\t\tfor ( var i in fontMap ) reverseFontMap[ fontMap[ i ] ] = i;\n\t\t\tfor ( var i in weightMap ) reverseWeightMap[ weightMap[ i ] ] = i;\n\t\t\tvar targetRotation = 0;\n\t\t\tvar targetRotationOnMouseDown = 0;\n\t\t\tvar mouseX = 0;\n\t\t\tvar mouseXOnMouseDown = 0;\n\t\t\tvar windowHalfX = window.innerWidth / 2;\n\t\t\tvar fontIndex = 1;\n\t\t\tinit();\n\t\t\tanimate();\n\t\t\tfunction decimalToHex( d ) {\n\t\t\t\tvar hex = Number( d ).toString( 16 );\n\t\t\t\thex = \"000000\".substr( 0, 6 - hex.length ) + hex;\n\t\t\t\treturn hex.toUpperCase();\n\t\t\t}\n\t\t\tfunction init() {\n\t\t\t\tcontainer = document.createElement( 'div' );\n\t\t\t\tdocument.body.prepend( container );\n\t\t\t\t// permalink = document.getElementById( \"permalink\" );\n\t\t\t\t// CAMERA\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 30, window.innerWidth / window.innerHeight, 1, 1500 );\n\t\t\t\tcamera.position.set( 0, 400, 700 );\n\t\t\t\tcameraTarget = new THREE.Vector3( 0, 150, 0 );\n\t\t\t\t// SCENE\n\t\t\t\tscene = new THREE.Scene();\n\t\t\t\tscene.background = new THREE.Color( 0x000000 );\n\t\t\t\tscene.fog = new THREE.Fog( 0x000000, 250, 1400 );\n\t\t\t\t// LIGHTS\n\t\t\t\tvar dirLight = new THREE.DirectionalLight( 0xffffff, 0.125 );\n\t\t\t\tdirLight.position.set( 0, 0, 1 ).normalize();\n\t\t\t\tscene.add( dirLight );\n\t\t\t\tvar pointLight = new THREE.PointLight( 0xffffff, 1.5 );\n\t\t\t\tpointLight.position.set( 0, 100, 90 );\n\t\t\t\tscene.add( pointLight );\n\t\t\t\t// Get text from hash\n\t\t\t\tvar hash = document.location.hash.substr( 1 );\n\t\t\t\tif ( hash.length !== 0 ) {\n\t\t\t\t\tvar colorhash = hash.substring( 0, 6 );\n\t\t\t\t\tvar fonthash = hash.substring( 6, 7 );\n\t\t\t\t\tvar weighthash = hash.substring( 7, 8 );\n\t\t\t\t\tvar bevelhash = hash.substring( 8, 9 );\n\t\t\t\t\tvar texthash = hash.substring( 10 );\n\t\t\t\t\thex = colorhash;\n\t\t\t\t\tpointLight.color.setHex( parseInt( colorhash, 16 ) );\n\t\t\t\t\tfontName = reverseFontMap[ parseInt( fonthash ) ];\n\t\t\t\t\tfontWeight = reverseWeightMap[ parseInt( weighthash ) ];\n\t\t\t\t\tbevelEnabled = parseInt( bevelhash );\n\t\t\t\t\ttext = decodeURI( texthash );\n\t\t\t\t\tupdatePermalink();\n\t\t\t\t} else {\n\t\t\t\t\tpointLight.color.setHSL( Math.random(), 1, 0.5 );\n\t\t\t\t\thex = decimalToHex( pointLight.color.getHex() );\n\t\t\t\t}\n\t\t\t\tmaterials = [\n\t\t\t\t\tnew THREE.MeshPhongMaterial( { color: 0xffffff, flatShading: true } ), // front\n\t\t\t\t\tnew THREE.MeshPhongMaterial( { color: 0xffffff } ) // side\n\t\t\t\t];\n\t\t\t\tgroup = new THREE.Group();\n\t\t\t\tgroup.position.y = 100;\n\t\t\t\tscene.add( group );\n\t\t\t\t// loadFont();\n\t\t\t\tvar plane = new THREE.Mesh(\n\t\t\t\t\tnew THREE.PlaneBufferGeometry( 10000, 10000 ),\n\t\t\t\t\tnew THREE.MeshBasicMaterial( { color: 0xffffff, opacity: 0.5, transparent: true } )\n\t\t\t\t);\n\t\t\t\tplane.position.y = 100;\n\t\t\t\tplane.rotation.x = - Math.PI / 2;\n\t\t\t\tscene.add( plane );\n\t\t\t\t// RENDERER\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\t\t\t\t// STATS\n\t\t\t\t// stats = new Stats();\n\t\t\t\t//container.appendChild( stats.dom );\n\t\t\t\t// EVENTS\n\t\t\t\tdocument.addEventListener( 'mousedown', onDocumentMouseDown, false );\n\t\t\t\tdocument.addEventListener( 'touchstart', onDocumentTouchStart, false );\n\t\t\t\tdocument.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\t\t\t\tdocument.addEventListener( 'keypress', onDocumentKeyPress, false );\n\t\t\t\tdocument.addEventListener( 'keydown', onDocumentKeyDown, false );\n\t\t\t\t// document.getElementById( \"color\" ).addEventListener( 'click', function () {\n\t\t\t\t// \tpointLight.color.setHSL( Math.random(), 1, 0.5 );\n\t\t\t\t// \thex = decimalToHex( pointLight.color.getHex() );\n\t\t\t\t// \tupdatePermalink();\n\t\t\t\t// }, false );\n\t\t\t\t// document.getElementById( \"font\" ).addEventListener( 'click', function () {\n\t\t\t\t// \tfontIndex ++;\n\t\t\t\t// \tfontName = reverseFontMap[ fontIndex % reverseFontMap.length ];\n\t\t\t\t// \tloadFont();\n\t\t\t\t// }, false );\n\t\t\t\t// document.getElementById( \"weight\" ).addEventListener( 'click', function () {\n\t\t\t\t// \tif ( fontWeight === \"bold\" ) {\n\t\t\t\t// \t\tfontWeight = \"regular\";\n\t\t\t\t// \t} else {\n\t\t\t\t// \t\tfontWeight = \"bold\";\n\t\t\t\t// \t}\n\t\t\t\t// \tloadFont();\n\t\t\t\t// }, false );\n\t\t\t\t// document.getElementById( \"bevel\" ).addEventListener( 'click', function () {\n\t\t\t\t// \tbevelEnabled = ! bevelEnabled;\n\t\t\t\t// \trefreshText();\n\t\t\t\t// }, false );\n\t\t\t\t//\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\t\t\t}\n\t\t\tfunction onWindowResize() {\n\t\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t}\n\t\t\t//\n\t\t\tfunction boolToNum( b ) {\n\t\t\t\treturn b ? 1 : 0;\n\t\t\t}\n\t\t\tfunction updatePermalink() {\n\t\t\t\tvar link = hex + fontMap[ fontName ] + weightMap[ fontWeight ] + boolToNum( bevelEnabled ) + \"#\" + encodeURI( text );\n\t\t\t\tpermalink.href = \"#\" + link;\n\t\t\t\twindow.location.hash = link;\n\t\t\t}\n\t\t\tfunction onDocumentKeyDown( event ) {\n\t\t\t\tif ( firstLetter ) {\n\t\t\t\t\tfirstLetter = false;\n\t\t\t\t\ttext = \"\";\n\t\t\t\t}\n\t\t\t\tvar keyCode = event.keyCode;\n\t\t\t\t// backspace\n\t\t\t\tif ( keyCode == 8 ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\ttext = text.substring( 0, text.length - 1 );\n\t\t\t\t\t// refreshText();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction onDocumentKeyPress( event ) {\n\t\t\t\tvar keyCode = event.which;\n\t\t\t\t// backspace\n\t\t\t\tif ( keyCode == 8 ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t} else {\n\t\t\t\t\tvar ch = String.fromCharCode( keyCode );\n\t\t\t\t\ttext += ch;\n\t\t\t\t\t// refreshText();\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction loadFont() {\n\t\t\t\tvar loader = new THREE.FontLoader();\n\t\t\t\tloader.load( 'fonts/' + fontName + '_' + fontWeight + '.typeface.json', function ( response ) {\n\t\t\t\t\tfont = response;\n\t\t\t\t\t// refreshText();\n\t\t\t\t} );\n\t\t\t}\n\t\t\tfunction createText() {\n\t\t\t\ttextGeo = new THREE.TextGeometry( text, {\n\t\t\t\t\tfont: font,\n\t\t\t\t\tsize: size,\n\t\t\t\t\theight: height,\n\t\t\t\t\tcurveSegments: curveSegments,\n\t\t\t\t\tbevelThickness: bevelThickness,\n\t\t\t\t\tbevelSize: bevelSize,\n\t\t\t\t\tbevelEnabled: bevelEnabled\n\t\t\t\t} );\n\t\t\t\ttextGeo.computeBoundingBox();\n\t\t\t\ttextGeo.computeVertexNormals();\n\t\t\t\t// \"fix\" side normals by removing z-component of normals for side faces\n\t\t\t\t// (this doesn't work well for beveled geometry as then we lose nice curvature around z-axis)\n\t\t\t\tif ( ! bevelEnabled ) {\n\t\t\t\t\tvar triangleAreaHeuristics = 0.1 * ( height * size );\n\t\t\t\t\tfor ( var i = 0; i < textGeo.faces.length; i ++ ) {\n\t\t\t\t\t\tvar face = textGeo.faces[ i ];\n\t\t\t\t\t\tif ( face.materialIndex == 1 ) {\n\t\t\t\t\t\t\tfor ( var j = 0; j < face.vertexNormals.length; j ++ ) {\n\t\t\t\t\t\t\t\tface.vertexNormals[ j ].z = 0;\n\t\t\t\t\t\t\t\tface.vertexNormals[ j ].normalize();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar va = textGeo.vertices[ face.a ];\n\t\t\t\t\t\t\tvar vb = textGeo.vertices[ face.b ];\n\t\t\t\t\t\t\tvar vc = textGeo.vertices[ face.c ];\n\t\t\t\t\t\t\tvar s = THREE.GeometryUtils.triangleArea( va, vb, vc );\n\t\t\t\t\t\t\tif ( s > triangleAreaHeuristics ) {\n\t\t\t\t\t\t\t\tfor ( var j = 0; j < face.vertexNormals.length; j ++ ) {\n\t\t\t\t\t\t\t\t\tface.vertexNormals[ j ].copy( face.normal );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar centerOffset = - 0.5 * ( textGeo.boundingBox.max.x - textGeo.boundingBox.min.x );\n\t\t\t\ttextGeo = new THREE.BufferGeometry().fromGeometry( textGeo );\n\t\t\t\ttextMesh1 = new THREE.Mesh( textGeo, materials );\n\t\t\t\ttextMesh1.position.x = centerOffset;\n\t\t\t\ttextMesh1.position.y = hover;\n\t\t\t\ttextMesh1.position.z = 0;\n\t\t\t\ttextMesh1.rotation.x = 0;\n\t\t\t\ttextMesh1.rotation.y = Math.PI * 2;\n\t\t\t\tgroup.add( textMesh1 );\n\t\t\t\tif ( mirror ) {\n\t\t\t\t\ttextMesh2 = new THREE.Mesh( textGeo, materials );\n\t\t\t\t\ttextMesh2.position.x = centerOffset;\n\t\t\t\t\ttextMesh2.position.y = - hover;\n\t\t\t\t\ttextMesh2.position.z = height;\n\t\t\t\t\ttextMesh2.rotation.x = Math.PI;\n\t\t\t\t\ttextMesh2.rotation.y = Math.PI * 2;\n\t\t\t\t\tgroup.add( textMesh2 );\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction refreshText() {\n\t\t\t\t// updatePermalink();\n\t\t\t\tgroup.remove( textMesh1 );\n\t\t\t\tif ( mirror ) group.remove( textMesh2 );\n\t\t\t\tif ( ! text ) return;\n\t\t\t\tcreateText();\n\t\t\t}\n\t\t\tfunction onDocumentMouseDown( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tdocument.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onDocumentMouseUp, false );\n\t\t\t\tdocument.addEventListener( 'mouseout', onDocumentMouseOut, false );\n\t\t\t\tmouseXOnMouseDown = event.clientX - windowHalfX;\n\t\t\t\ttargetRotationOnMouseDown = targetRotation;\n\t\t\t}\n\t\t\tfunction onDocumentMouseMove( event ) {\n\t\t\t\tmouseX = event.clientX - windowHalfX;\n\t\t\t\ttargetRotation = targetRotationOnMouseDown + ( mouseX - mouseXOnMouseDown ) * 0.02;\n\t\t\t}\n\t\t\tfunction onDocumentMouseUp() {\n\t\t\t\tdocument.removeEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onDocumentMouseUp, false );\n\t\t\t\tdocument.removeEventListener( 'mouseout', onDocumentMouseOut, false );\n\t\t\t}\n\t\t\tfunction onDocumentMouseOut() {\n\t\t\t\tdocument.removeEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onDocumentMouseUp, false );\n\t\t\t\tdocument.removeEventListener( 'mouseout', onDocumentMouseOut, false );\n\t\t\t}\n\t\t\tfunction onDocumentTouchStart( event ) {\n\t\t\t\tif ( event.touches.length == 1 ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tmouseXOnMouseDown = event.touches[ 0 ].pageX - windowHalfX;\n\t\t\t\t\ttargetRotationOnMouseDown = targetRotation;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction onDocumentTouchMove( event ) {\n\t\t\t\tif ( event.touches.length == 1 ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tmouseX = event.touches[ 0 ].pageX - windowHalfX;\n\t\t\t\t\ttargetRotation = targetRotationOnMouseDown + ( mouseX - mouseXOnMouseDown ) * 0.05;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//\n\t\t\tfunction animate() {\n\t\t\t\trequestAnimationFrame( animate );\n\t\t\t\trender();\n\t\t\t\t// stats.update();\n\t\t\t}\n\t\t\tfunction render() {\n\t\t\t\tgroup.rotation.y += ( targetRotation - group.rotation.y ) * 0.05;\n\t\t\t\tcamera.lookAt( cameraTarget );\n\t\t\t\trenderer.clear();\n\t\t\t\trenderer.render( scene, camera );\n\t\t\t}\n","code":"\"use strict\";\n\nvar THREE = require(\"three\");\nrequire(\"./GeometryUtils\");\nTHREE.Cache.enabled = true;\nvar container, stats, permalink, hex;\nvar camera, cameraTarget, scene, renderer;\nvar group, textMesh1, textMesh2, textGeo, materials;\nvar firstLetter = true;\nvar text = \"车主帮\",\n    height = 20,\n    size = 70,\n    hover = 30,\n    curveSegments = 4,\n    bevelThickness = 2,\n    bevelSize = 1.5,\n    bevelEnabled = true,\n    font = undefined,\n    fontName = \"optimer\",\n    fontWeight = \"bold\";\nvar mirror = true;\nvar fontMap = {\n\t\"helvetiker\": 0,\n\t\"optimer\": 1,\n\t\"gentilis\": 2,\n\t\"droid/droid_sans\": 3,\n\t\"droid/droid_serif\": 4\n};\nvar weightMap = {\n\t\"regular\": 0,\n\t\"bold\": 1\n};\nvar reverseFontMap = [];\nvar reverseWeightMap = [];\nfor (var i in fontMap) {\n\treverseFontMap[fontMap[i]] = i;\n}for (var i in weightMap) {\n\treverseWeightMap[weightMap[i]] = i;\n}var targetRotation = 0;\nvar targetRotationOnMouseDown = 0;\nvar mouseX = 0;\nvar mouseXOnMouseDown = 0;\nvar windowHalfX = window.innerWidth / 2;\nvar fontIndex = 1;\ninit();\nanimate();\nfunction decimalToHex(d) {\n\tvar hex = Number(d).toString(16);\n\thex = \"000000\".substr(0, 6 - hex.length) + hex;\n\treturn hex.toUpperCase();\n}\nfunction init() {\n\tcontainer = document.createElement('div');\n\tdocument.body.prepend(container);\n\n\tcamera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 1500);\n\tcamera.position.set(0, 400, 700);\n\tcameraTarget = new THREE.Vector3(0, 150, 0);\n\n\tscene = new THREE.Scene();\n\tscene.background = new THREE.Color(0x000000);\n\tscene.fog = new THREE.Fog(0x000000, 250, 1400);\n\n\tvar dirLight = new THREE.DirectionalLight(0xffffff, 0.125);\n\tdirLight.position.set(0, 0, 1).normalize();\n\tscene.add(dirLight);\n\tvar pointLight = new THREE.PointLight(0xffffff, 1.5);\n\tpointLight.position.set(0, 100, 90);\n\tscene.add(pointLight);\n\n\tvar hash = document.location.hash.substr(1);\n\tif (hash.length !== 0) {\n\t\tvar colorhash = hash.substring(0, 6);\n\t\tvar fonthash = hash.substring(6, 7);\n\t\tvar weighthash = hash.substring(7, 8);\n\t\tvar bevelhash = hash.substring(8, 9);\n\t\tvar texthash = hash.substring(10);\n\t\thex = colorhash;\n\t\tpointLight.color.setHex(parseInt(colorhash, 16));\n\t\tfontName = reverseFontMap[parseInt(fonthash)];\n\t\tfontWeight = reverseWeightMap[parseInt(weighthash)];\n\t\tbevelEnabled = parseInt(bevelhash);\n\t\ttext = decodeURI(texthash);\n\t\tupdatePermalink();\n\t} else {\n\t\tpointLight.color.setHSL(Math.random(), 1, 0.5);\n\t\thex = decimalToHex(pointLight.color.getHex());\n\t}\n\tmaterials = [new THREE.MeshPhongMaterial({ color: 0xffffff, flatShading: true }), new THREE.MeshPhongMaterial({ color: 0xffffff })];\n\tgroup = new THREE.Group();\n\tgroup.position.y = 100;\n\tscene.add(group);\n\n\tvar plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(10000, 10000), new THREE.MeshBasicMaterial({ color: 0xffffff, opacity: 0.5, transparent: true }));\n\tplane.position.y = 100;\n\tplane.rotation.x = -Math.PI / 2;\n\tscene.add(plane);\n\n\trenderer = new THREE.WebGLRenderer({ antialias: true });\n\trenderer.setPixelRatio(window.devicePixelRatio);\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n\tcontainer.appendChild(renderer.domElement);\n\n\tdocument.addEventListener('mousedown', onDocumentMouseDown, false);\n\tdocument.addEventListener('touchstart', onDocumentTouchStart, false);\n\tdocument.addEventListener('touchmove', onDocumentTouchMove, false);\n\tdocument.addEventListener('keypress', onDocumentKeyPress, false);\n\tdocument.addEventListener('keydown', onDocumentKeyDown, false);\n\n\twindow.addEventListener('resize', onWindowResize, false);\n}\nfunction onWindowResize() {\n\twindowHalfX = window.innerWidth / 2;\n\tcamera.aspect = window.innerWidth / window.innerHeight;\n\tcamera.updateProjectionMatrix();\n\trenderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction boolToNum(b) {\n\treturn b ? 1 : 0;\n}\nfunction updatePermalink() {\n\tvar link = hex + fontMap[fontName] + weightMap[fontWeight] + boolToNum(bevelEnabled) + \"#\" + encodeURI(text);\n\tpermalink.href = \"#\" + link;\n\twindow.location.hash = link;\n}\nfunction onDocumentKeyDown(event) {\n\tif (firstLetter) {\n\t\tfirstLetter = false;\n\t\ttext = \"\";\n\t}\n\tvar keyCode = event.keyCode;\n\n\tif (keyCode == 8) {\n\t\tevent.preventDefault();\n\t\ttext = text.substring(0, text.length - 1);\n\n\t\treturn false;\n\t}\n}\nfunction onDocumentKeyPress(event) {\n\tvar keyCode = event.which;\n\n\tif (keyCode == 8) {\n\t\tevent.preventDefault();\n\t} else {\n\t\tvar ch = String.fromCharCode(keyCode);\n\t\ttext += ch;\n\t}\n}\nfunction loadFont() {\n\tvar loader = new THREE.FontLoader();\n\tloader.load('fonts/' + fontName + '_' + fontWeight + '.typeface.json', function (response) {\n\t\tfont = response;\n\t});\n}\nfunction createText() {\n\ttextGeo = new THREE.TextGeometry(text, {\n\t\tfont: font,\n\t\tsize: size,\n\t\theight: height,\n\t\tcurveSegments: curveSegments,\n\t\tbevelThickness: bevelThickness,\n\t\tbevelSize: bevelSize,\n\t\tbevelEnabled: bevelEnabled\n\t});\n\ttextGeo.computeBoundingBox();\n\ttextGeo.computeVertexNormals();\n\n\tif (!bevelEnabled) {\n\t\tvar triangleAreaHeuristics = 0.1 * (height * size);\n\t\tfor (var i = 0; i < textGeo.faces.length; i++) {\n\t\t\tvar face = textGeo.faces[i];\n\t\t\tif (face.materialIndex == 1) {\n\t\t\t\tfor (var j = 0; j < face.vertexNormals.length; j++) {\n\t\t\t\t\tface.vertexNormals[j].z = 0;\n\t\t\t\t\tface.vertexNormals[j].normalize();\n\t\t\t\t}\n\t\t\t\tvar va = textGeo.vertices[face.a];\n\t\t\t\tvar vb = textGeo.vertices[face.b];\n\t\t\t\tvar vc = textGeo.vertices[face.c];\n\t\t\t\tvar s = THREE.GeometryUtils.triangleArea(va, vb, vc);\n\t\t\t\tif (s > triangleAreaHeuristics) {\n\t\t\t\t\tfor (var j = 0; j < face.vertexNormals.length; j++) {\n\t\t\t\t\t\tface.vertexNormals[j].copy(face.normal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tvar centerOffset = -0.5 * (textGeo.boundingBox.max.x - textGeo.boundingBox.min.x);\n\ttextGeo = new THREE.BufferGeometry().fromGeometry(textGeo);\n\ttextMesh1 = new THREE.Mesh(textGeo, materials);\n\ttextMesh1.position.x = centerOffset;\n\ttextMesh1.position.y = hover;\n\ttextMesh1.position.z = 0;\n\ttextMesh1.rotation.x = 0;\n\ttextMesh1.rotation.y = Math.PI * 2;\n\tgroup.add(textMesh1);\n\tif (mirror) {\n\t\ttextMesh2 = new THREE.Mesh(textGeo, materials);\n\t\ttextMesh2.position.x = centerOffset;\n\t\ttextMesh2.position.y = -hover;\n\t\ttextMesh2.position.z = height;\n\t\ttextMesh2.rotation.x = Math.PI;\n\t\ttextMesh2.rotation.y = Math.PI * 2;\n\t\tgroup.add(textMesh2);\n\t}\n}\nfunction refreshText() {\n\tgroup.remove(textMesh1);\n\tif (mirror) group.remove(textMesh2);\n\tif (!text) return;\n\tcreateText();\n}\nfunction onDocumentMouseDown(event) {\n\tevent.preventDefault();\n\tdocument.addEventListener('mousemove', onDocumentMouseMove, false);\n\tdocument.addEventListener('mouseup', onDocumentMouseUp, false);\n\tdocument.addEventListener('mouseout', onDocumentMouseOut, false);\n\tmouseXOnMouseDown = event.clientX - windowHalfX;\n\ttargetRotationOnMouseDown = targetRotation;\n}\nfunction onDocumentMouseMove(event) {\n\tmouseX = event.clientX - windowHalfX;\n\ttargetRotation = targetRotationOnMouseDown + (mouseX - mouseXOnMouseDown) * 0.02;\n}\nfunction onDocumentMouseUp() {\n\tdocument.removeEventListener('mousemove', onDocumentMouseMove, false);\n\tdocument.removeEventListener('mouseup', onDocumentMouseUp, false);\n\tdocument.removeEventListener('mouseout', onDocumentMouseOut, false);\n}\nfunction onDocumentMouseOut() {\n\tdocument.removeEventListener('mousemove', onDocumentMouseMove, false);\n\tdocument.removeEventListener('mouseup', onDocumentMouseUp, false);\n\tdocument.removeEventListener('mouseout', onDocumentMouseOut, false);\n}\nfunction onDocumentTouchStart(event) {\n\tif (event.touches.length == 1) {\n\t\tevent.preventDefault();\n\t\tmouseXOnMouseDown = event.touches[0].pageX - windowHalfX;\n\t\ttargetRotationOnMouseDown = targetRotation;\n\t}\n}\nfunction onDocumentTouchMove(event) {\n\tif (event.touches.length == 1) {\n\t\tevent.preventDefault();\n\t\tmouseX = event.touches[0].pageX - windowHalfX;\n\t\ttargetRotation = targetRotationOnMouseDown + (mouseX - mouseXOnMouseDown) * 0.05;\n\t}\n}\n\nfunction animate() {\n\trequestAnimationFrame(animate);\n\trender();\n}\nfunction render() {\n\tgroup.rotation.y += (targetRotation - group.rotation.y) * 0.05;\n\tcamera.lookAt(cameraTarget);\n\trenderer.clear();\n\trenderer.render(scene, camera);\n}","codeWraped":"Cube(\"/utils/init.js\", [\"/node_modules/three/build/three.js\", \"/utils/GeometryUtils.js\"], function (module, exports, require, load, process, global) {\n\n  var THREE = require('/node_modules/three/build/three.js');\n  require('/utils/GeometryUtils.js');\n  THREE.Cache.enabled = true;\n  var container, stats, permalink, hex;\n  var camera, cameraTarget, scene, renderer;\n  var group, textMesh1, textMesh2, textGeo, materials;\n  var firstLetter = true;\n  var text = \"车主帮\",\n  height = 20,\n  size = 70,\n  hover = 30,\n  curveSegments = 4,\n  bevelThickness = 2,\n  bevelSize = 1.5,\n  bevelEnabled = true,\n  font = undefined,\n  fontName = \"optimer\",\n  fontWeight = \"bold\";\n  var mirror = true;\n  var fontMap = {\n    \"helvetiker\": 0,\n    \"optimer\": 1,\n    \"gentilis\": 2,\n    \"droid/droid_sans\": 3,\n    \"droid/droid_serif\": 4 };\n\n  var weightMap = {\n    \"regular\": 0,\n    \"bold\": 1 };\n\n  var reverseFontMap = [];\n  var reverseWeightMap = [];\n  for (var i in fontMap) {\n    reverseFontMap[fontMap[i]] = i;\n  }for (var i in weightMap) {\n    reverseWeightMap[weightMap[i]] = i;\n  }var targetRotation = 0;\n  var targetRotationOnMouseDown = 0;\n  var mouseX = 0;\n  var mouseXOnMouseDown = 0;\n  var windowHalfX = window.innerWidth / 2;\n  var fontIndex = 1;\n  init();\n  animate();\n  function decimalToHex(d) {\n    var hex = Number(d).toString(16);\n    hex = \"000000\".substr(0, 6 - hex.length) + hex;\n    return hex.toUpperCase();\n  }\n  function init() {\n    container = document.createElement('div');\n    document.body.prepend(container);\n\n    camera = new THREE.PerspectiveCamera(30, window.innerWidth / window.innerHeight, 1, 1500);\n    camera.position.set(0, 400, 700);\n    cameraTarget = new THREE.Vector3(0, 150, 0);\n\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x000000);\n    scene.fog = new THREE.Fog(0x000000, 250, 1400);\n\n    var dirLight = new THREE.DirectionalLight(0xffffff, 0.125);\n    dirLight.position.set(0, 0, 1).normalize();\n    scene.add(dirLight);\n    var pointLight = new THREE.PointLight(0xffffff, 1.5);\n    pointLight.position.set(0, 100, 90);\n    scene.add(pointLight);\n\n    var hash = document.location.hash.substr(1);\n    if (hash.length !== 0) {\n      var colorhash = hash.substring(0, 6);\n      var fonthash = hash.substring(6, 7);\n      var weighthash = hash.substring(7, 8);\n      var bevelhash = hash.substring(8, 9);\n      var texthash = hash.substring(10);\n      hex = colorhash;\n      pointLight.color.setHex(parseInt(colorhash, 16));\n      fontName = reverseFontMap[parseInt(fonthash)];\n      fontWeight = reverseWeightMap[parseInt(weighthash)];\n      bevelEnabled = parseInt(bevelhash);\n      text = decodeURI(texthash);\n      updatePermalink();\n    } else {\n      pointLight.color.setHSL(Math.random(), 1, 0.5);\n      hex = decimalToHex(pointLight.color.getHex());\n    }\n    materials = [new THREE.MeshPhongMaterial({ color: 0xffffff, flatShading: true }), new THREE.MeshPhongMaterial({ color: 0xffffff })];\n    group = new THREE.Group();\n    group.position.y = 100;\n    scene.add(group);\n\n    var plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(10000, 10000), new THREE.MeshBasicMaterial({ color: 0xffffff, opacity: 0.5, transparent: true }));\n    plane.position.y = 100;\n    plane.rotation.x = -Math.PI / 2;\n    scene.add(plane);\n\n    renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    document.addEventListener('mousedown', onDocumentMouseDown, false);\n    document.addEventListener('touchstart', onDocumentTouchStart, false);\n    document.addEventListener('touchmove', onDocumentTouchMove, false);\n    document.addEventListener('keypress', onDocumentKeyPress, false);\n    document.addEventListener('keydown', onDocumentKeyDown, false);\n\n    window.addEventListener('resize', onWindowResize, false);\n  }\n  function onWindowResize() {\n    windowHalfX = window.innerWidth / 2;\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n\n  function boolToNum(b) {\n    return b ? 1 : 0;\n  }\n  function updatePermalink() {\n    var link = hex + fontMap[fontName] + weightMap[fontWeight] + boolToNum(bevelEnabled) + \"#\" + encodeURI(text);\n    permalink.href = \"#\" + link;\n    window.location.hash = link;\n  }\n  function onDocumentKeyDown(event) {\n    if (firstLetter) {\n      firstLetter = false;\n      text = \"\";\n    }\n    var keyCode = event.keyCode;\n\n    if (keyCode == 8) {\n      event.preventDefault();\n      text = text.substring(0, text.length - 1);\n\n      return false;\n    }\n  }\n  function onDocumentKeyPress(event) {\n    var keyCode = event.which;\n\n    if (keyCode == 8) {\n      event.preventDefault();\n    } else {\n      var ch = String.fromCharCode(keyCode);\n      text += ch;\n    }\n  }\n  function loadFont() {\n    var loader = new THREE.FontLoader();\n    loader.load('fonts/' + fontName + '_' + fontWeight + '.typeface.json', function (response) {\n      font = response;\n    });\n  }\n  function createText() {\n    textGeo = new THREE.TextGeometry(text, {\n      font: font,\n      size: size,\n      height: height,\n      curveSegments: curveSegments,\n      bevelThickness: bevelThickness,\n      bevelSize: bevelSize,\n      bevelEnabled: bevelEnabled });\n\n    textGeo.computeBoundingBox();\n    textGeo.computeVertexNormals();\n\n    if (!bevelEnabled) {\n      var triangleAreaHeuristics = 0.1 * (height * size);\n      for (var i = 0; i < textGeo.faces.length; i++) {\n        var face = textGeo.faces[i];\n        if (face.materialIndex == 1) {\n          for (var j = 0; j < face.vertexNormals.length; j++) {\n            face.vertexNormals[j].z = 0;\n            face.vertexNormals[j].normalize();\n          }\n          var va = textGeo.vertices[face.a];\n          var vb = textGeo.vertices[face.b];\n          var vc = textGeo.vertices[face.c];\n          var s = THREE.GeometryUtils.triangleArea(va, vb, vc);\n          if (s > triangleAreaHeuristics) {\n            for (var j = 0; j < face.vertexNormals.length; j++) {\n              face.vertexNormals[j].copy(face.normal);\n            }\n          }\n        }\n      }\n    }\n    var centerOffset = -0.5 * (textGeo.boundingBox.max.x - textGeo.boundingBox.min.x);\n    textGeo = new THREE.BufferGeometry().fromGeometry(textGeo);\n    textMesh1 = new THREE.Mesh(textGeo, materials);\n    textMesh1.position.x = centerOffset;\n    textMesh1.position.y = hover;\n    textMesh1.position.z = 0;\n    textMesh1.rotation.x = 0;\n    textMesh1.rotation.y = Math.PI * 2;\n    group.add(textMesh1);\n    if (mirror) {\n      textMesh2 = new THREE.Mesh(textGeo, materials);\n      textMesh2.position.x = centerOffset;\n      textMesh2.position.y = -hover;\n      textMesh2.position.z = height;\n      textMesh2.rotation.x = Math.PI;\n      textMesh2.rotation.y = Math.PI * 2;\n      group.add(textMesh2);\n    }\n  }\n  function refreshText() {\n    group.remove(textMesh1);\n    if (mirror) group.remove(textMesh2);\n    if (!text) return;\n    createText();\n  }\n  function onDocumentMouseDown(event) {\n    event.preventDefault();\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    document.addEventListener('mouseup', onDocumentMouseUp, false);\n    document.addEventListener('mouseout', onDocumentMouseOut, false);\n    mouseXOnMouseDown = event.clientX - windowHalfX;\n    targetRotationOnMouseDown = targetRotation;\n  }\n  function onDocumentMouseMove(event) {\n    mouseX = event.clientX - windowHalfX;\n    targetRotation = targetRotationOnMouseDown + (mouseX - mouseXOnMouseDown) * 0.02;\n  }\n  function onDocumentMouseUp() {\n    document.removeEventListener('mousemove', onDocumentMouseMove, false);\n    document.removeEventListener('mouseup', onDocumentMouseUp, false);\n    document.removeEventListener('mouseout', onDocumentMouseOut, false);\n  }\n  function onDocumentMouseOut() {\n    document.removeEventListener('mousemove', onDocumentMouseMove, false);\n    document.removeEventListener('mouseup', onDocumentMouseUp, false);\n    document.removeEventListener('mouseout', onDocumentMouseOut, false);\n  }\n  function onDocumentTouchStart(event) {\n    if (event.touches.length == 1) {\n      event.preventDefault();\n      mouseXOnMouseDown = event.touches[0].pageX - windowHalfX;\n      targetRotationOnMouseDown = targetRotation;\n    }\n  }\n  function onDocumentTouchMove(event) {\n    if (event.touches.length == 1) {\n      event.preventDefault();\n      mouseX = event.touches[0].pageX - windowHalfX;\n      targetRotation = targetRotationOnMouseDown + (mouseX - mouseXOnMouseDown) * 0.05;\n    }\n  }\n\n  function animate() {\n    requestAnimationFrame(animate);\n    render();\n  }\n  function render() {\n    group.rotation.y += (targetRotation - group.rotation.y) * 0.05;\n    camera.lookAt(cameraTarget);\n    renderer.clear();\n    renderer.render(scene, camera);\n  }return module.exports;});","sourceMap":null,"modifyTime":1554347429735,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/three/build/three.js","/utils/GeometryUtils.js"],"requiresOrigin":["/node_modules/three/build/three.js","/utils/GeometryUtils.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":42,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":27}},"extra":{"rawValue":"three","raw":"\"three\""},"value":"/node_modules/three/build/three.js"},{"type":"StringLiteral","start":53,"end":70,"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":25}},"extra":{"rawValue":"./GeometryUtils","raw":"\"./GeometryUtils\""},"value":"/utils/GeometryUtils.js"}]}