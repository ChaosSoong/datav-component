{"queryPath":"/index.js","absPath":"/Users/william/Desktop/czb/datav-component/image-swiper/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n//var Chart = require('XXX');\n\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n    this.img1 = document.createElement('img')\n    this.img1.id = Math.random().toString(36).substr(2)\n    this.img2 = document.createElement('img')\n    this.img2.id = Math.random().toString(36).substr(2)\n    this.img3 = document.createElement('img')\n    this.img3.id = Math.random().toString(36).substr(2)\n    this.img4 = document.createElement('img')\n    this.img4.id = Math.random().toString(36).substr(2)\n    this.time = 0\n    this.s = null\n    this.container.css({'margin':0,'padding':0})\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n    //更新图表\n    //this.chart.render(data, cfg);\n    // this.container.html(data[0].value)\n    clearInterval(this.s)\n    this.img1.src = this.config.image1\n    this.container.append(this.img1)\n    this.img2.src = this.config.image2\n    this.container.append(this.img2)\n    this.container.append(document.createElement('div'))\n    this.img3.src = this.config.image3\n    this.container.append(this.img3)\n    this.img4.src = this.config.image4\n    this.container.append(this.img4)\n    this.container.find('img').css({\n      'marginLeft': this.config.left_right,\n      'marginTop':this.config.top_bottom\n    })\n    //如果有需要的话,更新样式\n    this.updateStyle();\n    this.s = setInterval(()=>{\n      if(this.time%4===0){\n        $('#'+this.img1.id).show()\n        $('#'+this.img2.id).hide()\n        $('#'+this.img3.id).hide()\n        $('#'+this.img4.id).hide()\n      }else if(this.time%4 === 1){\n        $('#'+this.img1.id).show()\n        $('#'+this.img2.id).show()\n        $('#'+this.img3.id).hide()\n        $('#'+this.img4.id).hide()\n      }else if(this.time%4 === 2){\n        $('#'+this.img1.id).show()\n        $('#'+this.img2.id).show()\n        $('#'+this.img3.id).show()\n        $('#'+this.img4.id).hide()\n      }else{\n        $('#'+this.img1.id).show()\n        $('#'+this.img2.id).show()\n        $('#'+this.img3.id).show()\n        $('#'+this.img4.id).show()\n      }\n      this.time++\n    },1000)\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    this.img1.width = width/2- 2*this.config.left_right\n    this.img2.width = width/2- 2*this.config.left_right\n    this.img3.width = width/2- 2*this.config.left_right\n    this.img4.width = width/2- 2*this.config.left_right\n\n    this.img1.height = height/2- 2*this.config.top_bottom\n    this.img2.height = height/2- 2*this.config.top_bottom\n    this.img3.height = height/2- 2*this.config.top_bottom\n    this.img4.height = height/2- 2*this.config.top_bottom\n    //更新图表\n    //this.chart.render({\n    //  width: width,\n    //  height: height\n    //})\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n\n    this.updateStyle();\n    this.img1 = document.createElement('img');\n    this.img1.id = Math.random().toString(36).substr(2);\n    this.img2 = document.createElement('img');\n    this.img2.id = Math.random().toString(36).substr(2);\n    this.img3 = document.createElement('img');\n    this.img3.id = Math.random().toString(36).substr(2);\n    this.img4 = document.createElement('img');\n    this.img4.id = Math.random().toString(36).substr(2);\n    this.time = 0;\n    this.s = null;\n    this.container.css({ 'margin': 0, 'padding': 0 });\n  },\n\n  render: function render(data, config) {\n    var _this = this;\n\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n\n    clearInterval(this.s);\n    this.img1.src = this.config.image1;\n    this.container.append(this.img1);\n    this.img2.src = this.config.image2;\n    this.container.append(this.img2);\n    this.container.append(document.createElement('div'));\n    this.img3.src = this.config.image3;\n    this.container.append(this.img3);\n    this.img4.src = this.config.image4;\n    this.container.append(this.img4);\n    this.container.find('img').css({\n      'marginLeft': this.config.left_right,\n      'marginTop': this.config.top_bottom\n    });\n\n    this.updateStyle();\n    this.s = setInterval(function () {\n      if (_this.time % 4 === 0) {\n        $('#' + _this.img1.id).show();\n        $('#' + _this.img2.id).hide();\n        $('#' + _this.img3.id).hide();\n        $('#' + _this.img4.id).hide();\n      } else if (_this.time % 4 === 1) {\n        $('#' + _this.img1.id).show();\n        $('#' + _this.img2.id).show();\n        $('#' + _this.img3.id).hide();\n        $('#' + _this.img4.id).hide();\n      } else if (_this.time % 4 === 2) {\n        $('#' + _this.img1.id).show();\n        $('#' + _this.img2.id).show();\n        $('#' + _this.img3.id).show();\n        $('#' + _this.img4.id).hide();\n      } else {\n        $('#' + _this.img1.id).show();\n        $('#' + _this.img2.id).show();\n        $('#' + _this.img3.id).show();\n        $('#' + _this.img4.id).show();\n      }\n      _this.time++;\n    }, 1000);\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n    this.img1.width = width / 2 - 2 * this.config.left_right;\n    this.img2.width = width / 2 - 2 * this.config.left_right;\n    this.img3.width = width / 2 - 2 * this.config.left_right;\n    this.img4.width = width / 2 - 2 * this.config.left_right;\n\n    this.img1.height = height / 2 - 2 * this.config.top_bottom;\n    this.img2.height = height / 2 - 2 * this.config.top_bottom;\n    this.img3.height = height / 2 - 2 * this.config.top_bottom;\n    this.img4.height = height / 2 - 2 * this.config.top_bottom;\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n\n      this.updateStyle();\n      this.img1 = document.createElement('img');\n      this.img1.id = Math.random().toString(36).substr(2);\n      this.img2 = document.createElement('img');\n      this.img2.id = Math.random().toString(36).substr(2);\n      this.img3 = document.createElement('img');\n      this.img3.id = Math.random().toString(36).substr(2);\n      this.img4 = document.createElement('img');\n      this.img4.id = Math.random().toString(36).substr(2);\n      this.time = 0;\n      this.s = null;\n      this.container.css({ 'margin': 0, 'padding': 0 });\n    },\n\n    render: function render(data, config) {\n      var _this = this;\n\n      data = this.data(data);\n      var cfg = this.mergeConfig(config);\n\n      clearInterval(this.s);\n      this.img1.src = this.config.image1;\n      this.container.append(this.img1);\n      this.img2.src = this.config.image2;\n      this.container.append(this.img2);\n      this.container.append(document.createElement('div'));\n      this.img3.src = this.config.image3;\n      this.container.append(this.img3);\n      this.img4.src = this.config.image4;\n      this.container.append(this.img4);\n      this.container.find('img').css({\n        'marginLeft': this.config.left_right,\n        'marginTop': this.config.top_bottom });\n\n\n      this.updateStyle();\n      this.s = setInterval(function () {\n        if (_this.time % 4 === 0) {\n          $('#' + _this.img1.id).show();\n          $('#' + _this.img2.id).hide();\n          $('#' + _this.img3.id).hide();\n          $('#' + _this.img4.id).hide();\n        } else if (_this.time % 4 === 1) {\n          $('#' + _this.img1.id).show();\n          $('#' + _this.img2.id).show();\n          $('#' + _this.img3.id).hide();\n          $('#' + _this.img4.id).hide();\n        } else if (_this.time % 4 === 2) {\n          $('#' + _this.img1.id).show();\n          $('#' + _this.img2.id).show();\n          $('#' + _this.img3.id).show();\n          $('#' + _this.img4.id).hide();\n        } else {\n          $('#' + _this.img1.id).show();\n          $('#' + _this.img2.id).show();\n          $('#' + _this.img3.id).show();\n          $('#' + _this.img4.id).show();\n        }\n        _this.time++;\n      }, 1000);\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n      this.img1.width = width / 2 - 2 * this.config.left_right;\n      this.img2.width = width / 2 - 2 * this.config.left_right;\n      this.img3.width = width / 2 - 2 * this.config.left_right;\n      this.img4.width = width / 2 - 2 * this.config.left_right;\n\n      this.img1.height = height / 2 - 2 * this.config.top_bottom;\n      this.img2.height = height / 2 - 2 * this.config.top_bottom;\n      this.img3.height = height / 2 - 2 * this.config.top_bottom;\n      this.img4.height = height / 2 - 2 * this.config.top_bottom;\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1555500659129,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"}]}