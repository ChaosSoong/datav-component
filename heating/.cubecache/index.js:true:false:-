{"queryPath":"/index.js","absPath":"/Users/william/Desktop/czb/czb-datav/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event')\nvar $ = require('jquery')\nvar _ = require('lodash')\nvar Chart = require('echarts')\n// require('echarts/map/js/china')\nconst map = require('echarts/map/json/china.json')\nChart.registerMap('china', map)\nconsole.log(map, 11111)\nlet s = null\nlet areas = [\n  '北京',\n  '河北',\n  '天津',\n  '湖北',\n  '湖南',\n  '黑龙江',\n  '吉林',\n  '江西',\n  '浙江',\n  '广西',\n  '广东',\n  '江苏',\n  '重庆',\n  '山西',\n  '陕西',\n  '四川',\n  '福建',\n  '贵州',\n  '内蒙古',\n  '山东',\n  '云南',\n  '宁夏',\n  '安徽'\n]\nlet series = [\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 20,\n    data: [\n      {\n        name: '北京',\n        value: [116.41667, 39.91667]\n      },\n      {\n        name: '天津',\n        value: [117.2, 39.13333]\n      },\n      {\n        name: '广州',\n        value: [113.23333, 23.16667]\n      },\n      {\n        name: '沈阳',\n        value: [123.429092, 41.796768]\n      },\n      {\n        name: '长春',\n        value: [125.324501, 43.886841]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#00ffff'\n      }\n    }\n  },\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 18,\n    data: [\n      {\n        name: '呼和浩特',\n        value: [111.75199, 40.84149]\n      },\n      {\n        name: '银川',\n        value: [106.23248, 38.48644]\n      },\n      {\n        name: '太原',\n        value: [112.549248, 37.857014]\n      },\n      {\n        name: '石家庄',\n        value: [114.502464, 38.045475]\n      },\n      {\n        name: '济南',\n        value: [117.000923, 36.675808]\n      },\n      {\n        name: '郑州',\n        value: [113.665413, 34.757977]\n      },\n      {\n        name: '西安',\n        value: [108.948021, 34.263161]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#00ffff'\n      }\n    }\n  },\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 16,\n    data: [\n      {\n        name: '武汉',\n        value: [114.298569, 30.584354]\n      },\n      {\n        name: '南京',\n        value: [118.76741, 32.041546]\n      },\n      {\n        name: '合肥',\n        value: [117.283043, 31.861191]\n      },\n      {\n        name: '长沙',\n        value: [112.982277, 28.19409]\n      },\n      {\n        name: '南昌',\n        value: [115.892151, 28.676493]\n      },\n      {\n        name: '福州',\n        value: [119.3, 26.08333]\n      },\n      {\n        name: '杭州',\n        value: [120.15358, 30.287458]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#00ffff'\n      }\n    }\n  },\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 14,\n    data: [\n      {\n        name: '南宁',\n        value: [108.320007, 22.82402]\n      },\n      {\n        name: '重庆',\n        value: [106.504959, 29.533155]\n      },\n      {\n        name: '昆明',\n        value: [102.71225, 25.040609]\n      },\n      {\n        name: '贵阳',\n        value: [106.713478, 26.578342]\n      },\n      {\n        name: '成都',\n        value: [104.065735, 30.659462]\n      },\n      {\n        name: '兰州',\n        value: [103.83417, 36.06138]\n      },\n      {\n        name: '西宁',\n        value: [101.77782, 36.61729]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#00ffff'\n      }\n    }\n  },\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 18,\n    data: [\n      {\n        name: '北京',\n        value: [116.62667, 39.91667]\n      },\n      {\n        name: '天津',\n        value: [117.41, 39.13333]\n      },\n      {\n        name: '广州',\n        value: [113.82333, 23.16667]\n      },\n      {\n        name: '沈阳',\n        value: [123.039092, 41.296768]\n      },\n      {\n        name: '长春',\n        value: [125.124501, 43.196841]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#1f81d6'\n      }\n    }\n  },\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 16,\n    data: [\n      {\n        name: '呼和浩特',\n        value: [111.14199, 40.14149]\n      },\n      {\n        name: '银川',\n        value: [105.24248, 38.48644]\n      },\n      {\n        name: '太原',\n        value: [112.549248, 37.067014]\n      },\n      {\n        name: '石家庄',\n        value: [115.502464, 38.035475]\n      },\n      {\n        name: '济南',\n        value: [116.000923, 36.685808]\n      },\n      {\n        name: '郑州',\n        value: [113.665413, 33.747977]\n      },\n      {\n        name: '西安',\n        value: [108.948021, 33.263161]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#1f81d6'\n      }\n    }\n  },\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 14,\n    data: [\n      {\n        name: '武汉',\n        value: [114.288569, 31.584354]\n      },\n      {\n        name: '南京',\n        value: [118.78741, 33.041546]\n      },\n      {\n        name: '合肥',\n        value: [116.293043, 31.861191]\n      },\n      {\n        name: '长沙',\n        value: [111.982277, 28.17409]\n      },\n      {\n        name: '南昌',\n        value: [115.882151, 27.676493]\n      },\n      {\n        name: '福州',\n        value: [117.32, 25.08333]\n      },\n      {\n        name: '杭州',\n        value: [121.16358, 31.297458]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#1f81d6'\n      }\n    }\n  },\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 20,\n    data: [\n      {\n        name: '南宁',\n        value: [106.330007, 22.82402]\n      },\n      {\n        name: '重庆',\n        value: [107.514959, 29.533155]\n      },\n      {\n        name: '昆明',\n        value: [102.72225, 24.050609]\n      },\n      {\n        name: '贵阳',\n        value: [106.723478, 24.588342]\n      },\n      {\n        name: '成都',\n        value: [103.065735, 30.679462]\n      },\n      {\n        name: '兰州',\n        value: [104.83417, 36.08138]\n      },\n      {\n        name: '西宁',\n        value: [102.79782, 36.61729]\n      }\n    ],\n    itemStyle: {\n      normal: {\n        color: '#1f81d6'\n      }\n    }\n  }\n]\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(\n  function Base(container, config) {\n    this.config = {\n      theme: {}\n    }\n    this.container = $(container) //容器\n    this.apis = config.apis //hook一定要有\n    this._data = null //数据\n    this.chart = null //图表\n    this.init(config)\n  },\n  {\n    /**\n     * 公有初始化\n     */\n    init: function(config) {\n      //1.初始化,合并配置\n      this.mergeConfig(config)\n      //2.刷新布局,针对有子组件的组件 可有可无\n      this.updateLayout()\n      //3.子组件实例化\n      this.chart = Chart.init(this.container[0])\n      //4.如果有需要, 更新样式\n      this.updateStyle()\n    },\n    /**\n     * 绘制\n     * @param data\n     * @param options 不一定有\n     * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n     */\n    render: function(data, config) {\n      data = this.data(data)\n      console.log(data)\n      var cfg = this.mergeConfig(config)\n      //更新图表\n      //this.chart.render(data, cfg);\n      // this.container.html(data[0].value)\n      //如果有需要的话,更新样式\n      this.updateStyle()\n      // 使用刚指定的配置项和数据显示图表。\n      var regions = [\n        {\n          name: this.config.noselect.nomaparea,\n          itemStyle: {\n            areaColor: this.config.noselect.nomapcolor\n          }\n        }\n      ]\n      let noArea = this.config.noselect.nomaparea\n      if (noArea.indexOf(',') > 0) {\n        let areas = noArea.split(',')\n        areas.forEach((value, key, arr) => {\n          regions.push({\n            name: value,\n            itemStyle: {\n              areaColor: this.config.noselect.nomapcolor\n            }\n          })\n        })\n      }\n      var option = {\n        backgroundColor: this.config.backgroundColor,\n        legend: {\n          show: this.config.legend.show,\n          top: this.config.legend.top,\n          left: this.config.legend.left,\n          width: this.config.legend.width,\n          height: this.config.legend.height,\n          orient: this.config.legend.orient,\n          textStyle: {\n            color: 'white'\n          }\n        },\n        tooltip: {\n          trigger: this.config.tooltip\n        },\n        geo: {\n          map: 'china',\n          show: true,\n          silent: false,\n          left: '12%',\n          top: 40,\n          roam: false,\n          regions: [],\n          itemStyle: {\n            normal: {\n              areaColor: this.config.geo.normal,\n              borderColor: '#111'\n            },\n            emphasis: {\n              areaColor: '#1B8FCF'\n            }\n          }\n        },\n        series: []\n      }\n      option.series = data\n      // option.series = series\n      this.chart.setOption(option)\n      clearInterval(s)\n      s = setInterval(() => {\n        option.geo.regions = [\n          {\n            name: areas[parseInt(Math.random() * areas.length)],\n            itemStyle: {\n              areaColor: '#1B8FCF'\n            }\n          }\n        ]\n        this.chart.setOption(option)\n      }, 1000)\n    },\n    /**\n     *\n     * @param width\n     * @param height\n     */\n    resize: function(width, height) {\n      this.updateLayout(width, height)\n      console.log(width, height, '屏幕改变')\n      //更新图表\n      // this.chart.render({\n      //   width: width,\n      //   height: height\n      // })\n      this.chart.resize()\n    },\n    /**\n     * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n     * 暂时可以不填内容\n     */\n    setColors: function() {\n      //比如\n      //var cfg = this.config;\n      //cfg.color = cfg.theme.series[0] || cfg.color;\n    },\n    /**\n     * 数据,设置和获取数据\n     * @param data\n     * @returns {*|number}\n     */\n    data: function(data) {\n      if (data) {\n        this._data = data\n      }\n      return this._data\n    },\n    /**\n     * 更新配置\n     * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n     * [注] 有数组的配置一定要替换\n     * @param config\n     * @private\n     */\n    mergeConfig: function(config) {\n      if (!config) {\n        return this.config\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme)\n      this.setColors()\n      this.config = _.defaultsDeep(config || {}, this.config)\n      console.log(this.config, '更新配置')\n      return this.config\n    },\n    /**\n     * 更新布局\n     * 可有可无\n     */\n    updateLayout: function() {},\n    /**\n     * 更新样式\n     * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n     */\n    updateStyle: function() {\n      var cfg = this.config\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        color: cfg.color || '#fff'\n      })\n    },\n    /**\n     * 更新配置\n     * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n     */\n    //updateOptions: function (options) {},\n    /**\n     * 更新某些配置\n     * 给可以增量更新配置的组件用\n     */\n    //updateXXX: function () {},\n    /**\n     * 销毁组件\n     */\n    destroy: function() {\n      console.log('请实现 destroy 方法')\n    }\n  }\n)\n","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\n\nvar map = require('echarts/map/json/china.json');\nChart.registerMap('china', map);\nconsole.log(map, 11111);\nvar s = null;\nvar areas = ['北京', '河北', '天津', '湖北', '湖南', '黑龙江', '吉林', '江西', '浙江', '广西', '广东', '江苏', '重庆', '山西', '陕西', '四川', '福建', '贵州', '内蒙古', '山东', '云南', '宁夏', '安徽'];\nvar series = [{\n  name: '充电桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 20,\n  data: [{\n    name: '北京',\n    value: [116.41667, 39.91667]\n  }, {\n    name: '天津',\n    value: [117.2, 39.13333]\n  }, {\n    name: '广州',\n    value: [113.23333, 23.16667]\n  }, {\n    name: '沈阳',\n    value: [123.429092, 41.796768]\n  }, {\n    name: '长春',\n    value: [125.324501, 43.886841]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#00ffff'\n    }\n  }\n}, {\n  name: '充电桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 18,\n  data: [{\n    name: '呼和浩特',\n    value: [111.75199, 40.84149]\n  }, {\n    name: '银川',\n    value: [106.23248, 38.48644]\n  }, {\n    name: '太原',\n    value: [112.549248, 37.857014]\n  }, {\n    name: '石家庄',\n    value: [114.502464, 38.045475]\n  }, {\n    name: '济南',\n    value: [117.000923, 36.675808]\n  }, {\n    name: '郑州',\n    value: [113.665413, 34.757977]\n  }, {\n    name: '西安',\n    value: [108.948021, 34.263161]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#00ffff'\n    }\n  }\n}, {\n  name: '充电桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 16,\n  data: [{\n    name: '武汉',\n    value: [114.298569, 30.584354]\n  }, {\n    name: '南京',\n    value: [118.76741, 32.041546]\n  }, {\n    name: '合肥',\n    value: [117.283043, 31.861191]\n  }, {\n    name: '长沙',\n    value: [112.982277, 28.19409]\n  }, {\n    name: '南昌',\n    value: [115.892151, 28.676493]\n  }, {\n    name: '福州',\n    value: [119.3, 26.08333]\n  }, {\n    name: '杭州',\n    value: [120.15358, 30.287458]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#00ffff'\n    }\n  }\n}, {\n  name: '充电桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 14,\n  data: [{\n    name: '南宁',\n    value: [108.320007, 22.82402]\n  }, {\n    name: '重庆',\n    value: [106.504959, 29.533155]\n  }, {\n    name: '昆明',\n    value: [102.71225, 25.040609]\n  }, {\n    name: '贵阳',\n    value: [106.713478, 26.578342]\n  }, {\n    name: '成都',\n    value: [104.065735, 30.659462]\n  }, {\n    name: '兰州',\n    value: [103.83417, 36.06138]\n  }, {\n    name: '西宁',\n    value: [101.77782, 36.61729]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#00ffff'\n    }\n  }\n}, {\n  name: '加油桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 18,\n  data: [{\n    name: '北京',\n    value: [116.62667, 39.91667]\n  }, {\n    name: '天津',\n    value: [117.41, 39.13333]\n  }, {\n    name: '广州',\n    value: [113.82333, 23.16667]\n  }, {\n    name: '沈阳',\n    value: [123.039092, 41.296768]\n  }, {\n    name: '长春',\n    value: [125.124501, 43.196841]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#1f81d6'\n    }\n  }\n}, {\n  name: '加油桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 16,\n  data: [{\n    name: '呼和浩特',\n    value: [111.14199, 40.14149]\n  }, {\n    name: '银川',\n    value: [105.24248, 38.48644]\n  }, {\n    name: '太原',\n    value: [112.549248, 37.067014]\n  }, {\n    name: '石家庄',\n    value: [115.502464, 38.035475]\n  }, {\n    name: '济南',\n    value: [116.000923, 36.685808]\n  }, {\n    name: '郑州',\n    value: [113.665413, 33.747977]\n  }, {\n    name: '西安',\n    value: [108.948021, 33.263161]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#1f81d6'\n    }\n  }\n}, {\n  name: '加油桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 14,\n  data: [{\n    name: '武汉',\n    value: [114.288569, 31.584354]\n  }, {\n    name: '南京',\n    value: [118.78741, 33.041546]\n  }, {\n    name: '合肥',\n    value: [116.293043, 31.861191]\n  }, {\n    name: '长沙',\n    value: [111.982277, 28.17409]\n  }, {\n    name: '南昌',\n    value: [115.882151, 27.676493]\n  }, {\n    name: '福州',\n    value: [117.32, 25.08333]\n  }, {\n    name: '杭州',\n    value: [121.16358, 31.297458]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#1f81d6'\n    }\n  }\n}, {\n  name: '加油桩',\n  type: 'effectScatter',\n  coordinateSystem: 'geo',\n  symbolSize: 20,\n  data: [{\n    name: '南宁',\n    value: [106.330007, 22.82402]\n  }, {\n    name: '重庆',\n    value: [107.514959, 29.533155]\n  }, {\n    name: '昆明',\n    value: [102.72225, 24.050609]\n  }, {\n    name: '贵阳',\n    value: [106.723478, 24.588342]\n  }, {\n    name: '成都',\n    value: [103.065735, 30.679462]\n  }, {\n    name: '兰州',\n    value: [104.83417, 36.08138]\n  }, {\n    name: '西宁',\n    value: [102.79782, 36.61729]\n  }],\n  itemStyle: {\n    normal: {\n      color: '#1f81d6'\n    }\n  }\n}];\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n\n    this.chart = Chart.init(this.container[0]);\n\n    this.updateStyle();\n  },\n\n  render: function render(data, config) {\n    var _this = this;\n\n    data = this.data(data);\n    console.log(data);\n    var cfg = this.mergeConfig(config);\n\n    this.updateStyle();\n\n    var regions = [{\n      name: this.config.noselect.nomaparea,\n      itemStyle: {\n        areaColor: this.config.noselect.nomapcolor\n      }\n    }];\n    var noArea = this.config.noselect.nomaparea;\n    if (noArea.indexOf(',') > 0) {\n      var _areas = noArea.split(',');\n      _areas.forEach(function (value, key, arr) {\n        regions.push({\n          name: value,\n          itemStyle: {\n            areaColor: _this.config.noselect.nomapcolor\n          }\n        });\n      });\n    }\n    var option = {\n      backgroundColor: this.config.backgroundColor,\n      legend: {\n        show: this.config.legend.show,\n        top: this.config.legend.top,\n        left: this.config.legend.left,\n        width: this.config.legend.width,\n        height: this.config.legend.height,\n        orient: this.config.legend.orient,\n        textStyle: {\n          color: 'white'\n        }\n      },\n      tooltip: {\n        trigger: this.config.tooltip\n      },\n      geo: {\n        map: 'china',\n        show: true,\n        silent: false,\n        left: '12%',\n        top: 40,\n        roam: false,\n        regions: [],\n        itemStyle: {\n          normal: {\n            areaColor: this.config.geo.normal,\n            borderColor: '#111'\n          },\n          emphasis: {\n            areaColor: '#1B8FCF'\n          }\n        }\n      },\n      series: []\n    };\n    option.series = data;\n\n    this.chart.setOption(option);\n    clearInterval(s);\n    s = setInterval(function () {\n      option.geo.regions = [{\n        name: areas[parseInt(Math.random() * areas.length)],\n        itemStyle: {\n          areaColor: '#1B8FCF'\n        }\n      }];\n      _this.chart.setOption(option);\n    }, 1000);\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n    console.log(width, height, '屏幕改变');\n\n    this.chart.resize();\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    console.log(this.config, '更新配置');\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      color: cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/node_modules/echarts/index.js\", \"/node_modules/echarts/map/json/china.json\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n  var Chart = require('/node_modules/echarts/index.js');\n\n  var map = require('/node_modules/echarts/map/json/china.json');\n  Chart.registerMap('china', map);\n  console.log(map, 11111);\n  var s = null;\n  var areas = ['北京', '河北', '天津', '湖北', '湖南', '黑龙江', '吉林', '江西', '浙江', '广西', '广东', '江苏', '重庆', '山西', '陕西', '四川', '福建', '贵州', '内蒙古', '山东', '云南', '宁夏', '安徽'];\n  var series = [{\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 20,\n    data: [{\n      name: '北京',\n      value: [116.41667, 39.91667] },\n    {\n      name: '天津',\n      value: [117.2, 39.13333] },\n    {\n      name: '广州',\n      value: [113.23333, 23.16667] },\n    {\n      name: '沈阳',\n      value: [123.429092, 41.796768] },\n    {\n      name: '长春',\n      value: [125.324501, 43.886841] }],\n\n    itemStyle: {\n      normal: {\n        color: '#00ffff' } } },\n\n\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 18,\n    data: [{\n      name: '呼和浩特',\n      value: [111.75199, 40.84149] },\n    {\n      name: '银川',\n      value: [106.23248, 38.48644] },\n    {\n      name: '太原',\n      value: [112.549248, 37.857014] },\n    {\n      name: '石家庄',\n      value: [114.502464, 38.045475] },\n    {\n      name: '济南',\n      value: [117.000923, 36.675808] },\n    {\n      name: '郑州',\n      value: [113.665413, 34.757977] },\n    {\n      name: '西安',\n      value: [108.948021, 34.263161] }],\n\n    itemStyle: {\n      normal: {\n        color: '#00ffff' } } },\n\n\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 16,\n    data: [{\n      name: '武汉',\n      value: [114.298569, 30.584354] },\n    {\n      name: '南京',\n      value: [118.76741, 32.041546] },\n    {\n      name: '合肥',\n      value: [117.283043, 31.861191] },\n    {\n      name: '长沙',\n      value: [112.982277, 28.19409] },\n    {\n      name: '南昌',\n      value: [115.892151, 28.676493] },\n    {\n      name: '福州',\n      value: [119.3, 26.08333] },\n    {\n      name: '杭州',\n      value: [120.15358, 30.287458] }],\n\n    itemStyle: {\n      normal: {\n        color: '#00ffff' } } },\n\n\n  {\n    name: '充电桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 14,\n    data: [{\n      name: '南宁',\n      value: [108.320007, 22.82402] },\n    {\n      name: '重庆',\n      value: [106.504959, 29.533155] },\n    {\n      name: '昆明',\n      value: [102.71225, 25.040609] },\n    {\n      name: '贵阳',\n      value: [106.713478, 26.578342] },\n    {\n      name: '成都',\n      value: [104.065735, 30.659462] },\n    {\n      name: '兰州',\n      value: [103.83417, 36.06138] },\n    {\n      name: '西宁',\n      value: [101.77782, 36.61729] }],\n\n    itemStyle: {\n      normal: {\n        color: '#00ffff' } } },\n\n\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 18,\n    data: [{\n      name: '北京',\n      value: [116.62667, 39.91667] },\n    {\n      name: '天津',\n      value: [117.41, 39.13333] },\n    {\n      name: '广州',\n      value: [113.82333, 23.16667] },\n    {\n      name: '沈阳',\n      value: [123.039092, 41.296768] },\n    {\n      name: '长春',\n      value: [125.124501, 43.196841] }],\n\n    itemStyle: {\n      normal: {\n        color: '#1f81d6' } } },\n\n\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 16,\n    data: [{\n      name: '呼和浩特',\n      value: [111.14199, 40.14149] },\n    {\n      name: '银川',\n      value: [105.24248, 38.48644] },\n    {\n      name: '太原',\n      value: [112.549248, 37.067014] },\n    {\n      name: '石家庄',\n      value: [115.502464, 38.035475] },\n    {\n      name: '济南',\n      value: [116.000923, 36.685808] },\n    {\n      name: '郑州',\n      value: [113.665413, 33.747977] },\n    {\n      name: '西安',\n      value: [108.948021, 33.263161] }],\n\n    itemStyle: {\n      normal: {\n        color: '#1f81d6' } } },\n\n\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 14,\n    data: [{\n      name: '武汉',\n      value: [114.288569, 31.584354] },\n    {\n      name: '南京',\n      value: [118.78741, 33.041546] },\n    {\n      name: '合肥',\n      value: [116.293043, 31.861191] },\n    {\n      name: '长沙',\n      value: [111.982277, 28.17409] },\n    {\n      name: '南昌',\n      value: [115.882151, 27.676493] },\n    {\n      name: '福州',\n      value: [117.32, 25.08333] },\n    {\n      name: '杭州',\n      value: [121.16358, 31.297458] }],\n\n    itemStyle: {\n      normal: {\n        color: '#1f81d6' } } },\n\n\n  {\n    name: '加油桩',\n    type: 'effectScatter',\n    coordinateSystem: 'geo',\n    symbolSize: 20,\n    data: [{\n      name: '南宁',\n      value: [106.330007, 22.82402] },\n    {\n      name: '重庆',\n      value: [107.514959, 29.533155] },\n    {\n      name: '昆明',\n      value: [102.72225, 24.050609] },\n    {\n      name: '贵阳',\n      value: [106.723478, 24.588342] },\n    {\n      name: '成都',\n      value: [103.065735, 30.679462] },\n    {\n      name: '兰州',\n      value: [104.83417, 36.08138] },\n    {\n      name: '西宁',\n      value: [102.79782, 36.61729] }],\n\n    itemStyle: {\n      normal: {\n        color: '#1f81d6' } } }];\n\n\n\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n\n      this.chart = Chart.init(this.container[0]);\n\n      this.updateStyle();\n    },\n\n    render: function render(data, config) {\n      var _this = this;\n\n      data = this.data(data);\n      console.log(data);\n      var cfg = this.mergeConfig(config);\n\n      this.updateStyle();\n\n      var regions = [{\n        name: this.config.noselect.nomaparea,\n        itemStyle: {\n          areaColor: this.config.noselect.nomapcolor } }];\n\n\n      var noArea = this.config.noselect.nomaparea;\n      if (noArea.indexOf(',') > 0) {\n        var _areas = noArea.split(',');\n        _areas.forEach(function (value, key, arr) {\n          regions.push({\n            name: value,\n            itemStyle: {\n              areaColor: _this.config.noselect.nomapcolor } });\n\n\n        });\n      }\n      var option = {\n        backgroundColor: this.config.backgroundColor,\n        legend: {\n          show: this.config.legend.show,\n          top: this.config.legend.top,\n          left: this.config.legend.left,\n          width: this.config.legend.width,\n          height: this.config.legend.height,\n          orient: this.config.legend.orient,\n          textStyle: {\n            color: 'white' } },\n\n\n        tooltip: {\n          trigger: this.config.tooltip },\n\n        geo: {\n          map: 'china',\n          show: true,\n          silent: false,\n          left: '12%',\n          top: 40,\n          roam: false,\n          regions: [],\n          itemStyle: {\n            normal: {\n              areaColor: this.config.geo.normal,\n              borderColor: '#111' },\n\n            emphasis: {\n              areaColor: '#1B8FCF' } } },\n\n\n\n        series: [] };\n\n      option.series = data;\n\n      this.chart.setOption(option);\n      clearInterval(s);\n      s = setInterval(function () {\n        option.geo.regions = [{\n          name: areas[parseInt(Math.random() * areas.length)],\n          itemStyle: {\n            areaColor: '#1B8FCF' } }];\n\n\n        _this.chart.setOption(option);\n      }, 1000);\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n      console.log(width, height, '屏幕改变');\n\n      this.chart.resize();\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      console.log(this.config, '更新配置');\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        color: cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1553174083145,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js","/node_modules/echarts/map/json/china.json"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js","/node_modules/echarts/map/json/china.json"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":125,"end":134,"loc":{"start":{"line":6,"column":20},"end":{"line":6,"column":29}},"extra":{"rawValue":"echarts","raw":"'echarts'"},"value":"/node_modules/echarts/index.js"},{"type":"StringLiteral","start":156,"end":185,"loc":{"start":{"line":8,"column":18},"end":{"line":8,"column":47}},"extra":{"rawValue":"echarts/map/json/china.json","raw":"'echarts/map/json/china.json'"},"value":"/node_modules/echarts/map/json/china.json"}]}